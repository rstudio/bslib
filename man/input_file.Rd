% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny-input_file.R
\name{input_file}
\alias{input_file}
\title{File Upload Control}
\usage{
input_file(
  id,
  label,
  ...,
  multiple = FALSE,
  accept = NULL,
  width = NULL,
  buttonLabel = "Browse...",
  placeholder = "No file selected",
  capture = NULL
)
}
\arguments{
\item{id}{An input id.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{...}{Ignored, included for future expansion.}

\item{multiple}{Whether the user should be allowed to select and upload
multiple files at once. \strong{Does not work on older browsers, including
Internet Explorer 9 and earlier.}}

\item{accept}{A character vector of "unique file type specifiers" which gives
the browser a hint as to the type of file the server expects. Many browsers
use this prevent the user from selecting an invalid file.

A unique file type specifier can be:
\itemize{
\item A case insensitive extension like \code{.csv} or \code{.rds}.
\item A valid MIME type, like \code{text/plain} or \code{application/pdf}
\item One of \verb{audio/*}, \verb{video/*}, or \verb{image/*} meaning any audio, video,
or image type, respectively.
}}

\item{width}{The width of the input, e.g. \code{'400px'}, or \code{'100\%'};
see \code{\link[shiny:validateCssUnit]{validateCssUnit()}}.}

\item{buttonLabel}{The label used on the button. Can be text or an HTML tag
object.}

\item{placeholder}{The text to show before a file has been uploaded.}

\item{capture}{What source to use for capturing image, audio or video data.
This attribute facilitates user access to a device's media capture
mechanism, such as a camera, or microphone, from within a file upload
control.

A value of \code{user} indicates that the user-facing camera and/or microphone
should be used. A value of \code{environment} specifies that the outward-facing
camera and/or microphone should be used.

By default on most phones, this will accept still photos or video. For
still photos only, also use \code{accept="image/*"}. For video only, use
\code{accept="video/*"}.}
}
\description{
Create a file upload control that can be used to upload one or more files.
}
\details{
Whenever a file upload completes, the corresponding input variable is set to
a dataframe. See the \verb{Server value} section.

Each time files are uploaded, they are written to a new random subdirectory
inside of R's process-level temporary directory. The Shiny user session keeps
track of all uploads in the session, and when the session ends, Shiny deletes
all of the subdirectories where files where uploaded to.
}
\section{Aliased from Shiny}{
 This function is an alias for \code{shiny::fileInput()} and is included to maintain more consistent naming conventions in Shiny apps that use \pkg{bslib}. The documentation on this page may still refer to the original function names. You can replace \code{shiny::fileInput()} with \code{input_file()}.
}

\section{Server value}{



A \code{data.frame} that contains one row for each selected file, and following
columns:
\describe{
\item{\code{name}}{The filename provided by the web browser. This is
\strong{not} the path to read to get at the actual data that was uploaded
(see
\code{datapath} column).}
\item{\code{size}}{The size of the uploaded data, in
bytes.}
\item{\code{type}}{The MIME type reported by the browser (for example,
\code{text/plain}), or empty string if the browser didn't know.}
\item{\code{datapath}}{The path to a temp file that contains the data that was
uploaded. This file may be deleted if the user performs another upload
operation.}
}

}

\seealso{
Other Shiny upload/download aliases: 
\code{\link{download_button}()},
\code{\link{download_handler}()},
\code{\link{download_link}()}
}
\concept{Shiny upload/download aliases}

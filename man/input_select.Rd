% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny-input_select.R
\name{input_select}
\alias{input_select}
\title{Create a select list input control}
\usage{
input_select(
  id,
  label,
  choices,
  selected = NULL,
  ...,
  multiple = FALSE,
  selectize = FALSE,
  width = NULL,
  size = NULL
)
}
\arguments{
\item{id}{An input id.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{choices}{List of values to select from. If elements of the list are
named, then that name --- rather than the value --- is displayed to the
user. It's also possible to group related inputs by providing a named list
whose elements are (either named or unnamed) lists, vectors, or factors. In
this case, the outermost names will be used as the group labels (leveraging
the \verb{<optgroup>} HTML tag) for the elements in the respective sublist. See
the example section for a small demo of this feature.}

\item{selected}{The initially selected value (or multiple values if \code{multiple = TRUE}). If not specified then defaults to the first value for
single-select lists and no values for multiple select lists.}

\item{...}{Ignored, included for future expansion.}

\item{multiple}{Is selection of multiple items allowed?}

\item{selectize}{Whether to use \pkg{selectize.js} or not.}

\item{width}{The width of the input, e.g. \code{'400px'}, or \code{'100\%'};
see \code{\link[shiny:validateCssUnit]{validateCssUnit()}}.}

\item{size}{Number of items to show in the selection box; a larger number
will result in a taller box. Not compatible with \code{selectize=TRUE}.
Normally, when \code{multiple=FALSE}, a select input will be a drop-down list,
but when \code{size} is set, it will be a box instead.}
}
\value{
A select list control that can be added to a UI definition.
}
\description{
Create a select list that can be used to choose a single or multiple items
from a list of values.
}
\details{
By default, \code{selectInput()} and \code{selectizeInput()} use the JavaScript library
\pkg{selectize.js} (\url{https://selectize.dev/}) instead of
the basic select input element. To use the standard HTML select input
element, use \code{selectInput()} with \code{selectize=FALSE}.

In selectize mode, if the first element in \code{choices} has a value of \code{""}, its
name will be treated as a placeholder prompt. For example:
\code{selectInput("letter", "Letter", c("Choose one" = "", LETTERS))}

\strong{Performance note:} \code{selectInput()} and \code{selectizeInput()} can slow down
significantly when thousands of choices are used; with legacy browsers like
Internet Explorer, the user interface may hang for many seconds. For large
numbers of choices, Shiny offers a "server-side selectize" option that
massively improves performance and efficiency; see
\href{https://shiny.rstudio.com/articles/selectize.html}{this selectize article}
on the Shiny Dev Center for details.
}
\section{Aliased from Shiny}{

This function is an alias for \code{shiny::selectInput()} and is included to maintain more consistent naming conventions in Shiny apps that use \pkg{bslib}. The documentation on this page may still refer to the original function names. You can replace \code{shiny::selectInput()} with \code{input_select()}.

Note that, unlike in \code{\link[shiny:selectInput]{shiny::selectInput()}}, \code{input_select()} does not
use selectize.js by default. Insttead, set \code{selectize = TRUE} or call
\code{\link[=input_selectize]{input_selectize()}} directly.
}

\section{Server value}{

 A vector of character strings, usually of length
1, with the value of the selected items. When \code{multiple=TRUE} and
nothing is selected, this value will be \code{NULL}.

}

\seealso{
\code{\link[=update_select]{update_select()}} to programmatically update a select input.

Other Shiny input aliases: 
\code{\link{input_action_button}()},
\code{\link{input_action_link}()},
\code{\link{input_checkbox}()},
\code{\link{input_checkbox_group}()},
\code{\link{input_date}()},
\code{\link{input_date_range}()},
\code{\link{input_numeric}()},
\code{\link{input_password}()},
\code{\link{input_radio_buttons}()},
\code{\link{input_selectize}()},
\code{\link{input_slider}()},
\code{\link{input_text}()},
\code{\link{input_text_area}()}
}
\concept{Shiny input aliases}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny-input_radio_buttons.R
\name{input_radio_buttons}
\alias{input_radio_buttons}
\title{Create radio buttons}
\usage{
input_radio_buttons(
  id,
  label,
  choices = NULL,
  selected = NULL,
  ...,
  inline = FALSE,
  width = NULL,
  choiceNames = NULL,
  choiceValues = NULL
)
}
\arguments{
\item{id}{An input id.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{choices}{List of values to select from (if elements of the list are
named then that name rather than the value is displayed to the user). If
this argument is provided, then \code{choiceNames} and \code{choiceValues} must not
be provided, and vice-versa. The values should be strings; other types
(such as logicals and numbers) will be coerced to strings.}

\item{selected}{The initially selected value. If not specified, then it
defaults to the first item in \code{choices}. To start with no items selected,
use \code{character(0)}.}

\item{...}{Ignored, included for future expansion.}

\item{inline}{If \code{TRUE}, render the choices inline (i.e. horizontally)}

\item{width}{The width of the input, e.g. \code{'400px'}, or \code{'100\%'};
see \code{\link[shiny:validateCssUnit]{validateCssUnit()}}.}

\item{choiceNames, choiceValues}{List of names and values, respectively, that
are displayed to the user in the app and correspond to the each choice (for
this reason, \code{choiceNames} and \code{choiceValues} must have the same length).
If either of these arguments is provided, then the other \emph{must} be provided
and \code{choices} \emph{must not} be provided. The advantage of using both of these
over a named list for \code{choices} is that \code{choiceNames} allows any type of UI
object to be passed through (tag objects, icons, HTML code, ...), instead
of just simple text. See Examples.}
}
\value{
A set of radio buttons that can be added to a UI definition.
}
\description{
Create a set of radio buttons used to select an item from a list.
}
\details{
If you need to represent a "None selected" state, it's possible to default
the radio buttons to have no options selected by using \code{selected = character(0)}. However, this is not recommended, as it gives the user no way
to return to that state once they've made a selection. Instead, consider
having the first of your choices be \code{c("None selected" = "")}.
}
\section{Aliased from Shiny}{
 This function is an alias for \code{shiny::radioButtons()} and is included to maintain more consistent naming conventions in Shiny apps that use \pkg{bslib}. The documentation on this page may still refer to the original function names. You can replace \code{shiny::radioButtons()} with \code{input_radio_buttons()}.
}

\section{Server value}{



A character string containing the value of the selected button.

}

\seealso{
\code{\link[=update_radio_buttons]{update_radio_buttons()}} to programmatically update a radio button
input.

Other Shiny input aliases: 
\code{\link{input_action_button}()},
\code{\link{input_action_link}()},
\code{\link{input_checkbox}()},
\code{\link{input_checkbox_group}()},
\code{\link{input_date}()},
\code{\link{input_date_range}()},
\code{\link{input_numeric}()},
\code{\link{input_password}()},
\code{\link{input_select}()},
\code{\link{input_selectize}()},
\code{\link{input_slider}()},
\code{\link{input_text}()},
\code{\link{input_text_area}()}
}
\concept{Shiny input aliases}

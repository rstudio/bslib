% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accordion.R
\name{accordion}
\alias{accordion}
\alias{accordion_panel}
\title{Create a vertically collapsing accordion}
\usage{
accordion(
  ...,
  id = NULL,
  selected = NULL,
  autoclose = FALSE,
  class = NULL,
  width = NULL,
  height = NULL
)

accordion_panel(title, ..., value = title, icon = NULL)
}
\arguments{
\item{...}{Named arguments become attributes on the \verb{<div class="accordion">}
element. Unnamed arguments should be \code{accordion_panel()}s.}

\item{id}{If provided, you can use \code{input$id} in your server logic to
determine which of the \code{accordion_panel()}s are currently active. The value
will correspond to the \code{accordion_panel()}'s \code{value} argument.}

\item{selected}{A character vector of \code{accordion_panel()} \code{value}s to
select/show by default. The default value of \code{NULL} will select the first
\code{accordion_panel()}. Use a special value of \code{I("all")} ( or \code{I("none")}) to
select all (or none) of the items. It's only possible to select more than
one panel when \code{autoclose=FALSE}.}

\item{autoclose}{Upon clicking a new \code{accordion_panel()}, should the
previously active one close?}

\item{class}{Additional CSS classes to include on the accordion div.}

\item{width, height}{Any valid CSS unit; for example, height="100\%".}

\item{title}{A title to appear in the \code{accordion_panel()}'s header.}

\item{value}{A character string that uniquely identifies this panel.}

\item{icon}{A \link[htmltools:builder]{htmltools::tag} child (e.g., \code{\link[bsicons:bs_icon]{bsicons::bs_icon()}}) which is positioned just before the \code{title}.}
}
\description{
Create a vertically collapsing accordion
}
\examples{

items <- lapply(LETTERS, function(x) {
  accordion_panel(paste("Section", x), paste("Some narrative for section", x))
})

# First shown by default
accordion(!!!items)
# Nothing shown by default
accordion(!!!items, selected = I("none"))
# Everything shown by default
accordion(!!!items, selected = I("all"))

# Show particular sections
accordion(!!!items, selected = "Section B")
accordion(!!!items, selected = c("Section A", "Section B"))

# Provide an id to create a shiny input binding
if (interactive()) {
  library(shiny)

  ui <- page_fluid(
    accordion(!!!items, id = "acc")
  )

  server <- function(input, output) {
    observe(print(input$acc))
  }

  shinyApp(ui, server)
}

}
\references{
\url{https://getbootstrap.com/docs/5.2/components/accordion/}
}

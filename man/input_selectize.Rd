% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny-input_selectize.R
\name{input_selectize}
\alias{input_selectize}
\title{Create a select list input control}
\usage{
input_selectize(id, ..., options = NULL, width = NULL)
}
\arguments{
\item{id}{An input id.}

\item{...}{Ignored, included for future expansion.}

\item{options}{A list of options. See the documentation of \pkg{selectize.js}(\url{https://selectize.dev/docs/usage})
for possible options (character option values inside \code{\link[base:AsIs]{base::I()}} will
be treated as literal JavaScript code; see \code{\link[shiny:renderDataTable]{renderDataTable()}}
for details).}

\item{width}{The width of the input, e.g. \code{'400px'}, or \code{'100\%'};
see \code{\link[shiny:validateCssUnit]{validateCssUnit()}}.}
}
\value{
A select list control that can be added to a UI definition.
}
\description{
Create a select list that can be used to choose a single or multiple items
from a list of values.
}
\details{
By default, \code{selectInput()} and \code{selectizeInput()} use the JavaScript library
\pkg{selectize.js} (\url{https://selectize.dev/}) instead of
the basic select input element. To use the standard HTML select input
element, use \code{selectInput()} with \code{selectize=FALSE}.

In selectize mode, if the first element in \code{choices} has a value of \code{""}, its
name will be treated as a placeholder prompt. For example:
\code{selectInput("letter", "Letter", c("Choose one" = "", LETTERS))}

\strong{Performance note:} \code{selectInput()} and \code{selectizeInput()} can slow down
significantly when thousands of choices are used; with legacy browsers like
Internet Explorer, the user interface may hang for many seconds. For large
numbers of choices, Shiny offers a "server-side selectize" option that
massively improves performance and efficiency; see
\href{https://shiny.rstudio.com/articles/selectize.html}{this selectize article}
on the Shiny Dev Center for details.
}
\section{Aliased from Shiny}{
 This function is an alias for \code{shiny::selectizeInput()} and is included to maintain more consistent naming conventions in Shiny apps that use \pkg{bslib}. The documentation on this page may still refer to the original function names. You can replace \code{shiny::selectizeInput()} with \code{input_selectize()}.
}

\section{Server value}{

 A vector of character strings, usually of length
1, with the value of the selected items. When \code{multiple=TRUE} and
nothing is selected, this value will be \code{NULL}.

}

\seealso{
\code{\link[=update_selectize]{update_selectize()}} to programmatically update a selectize input.

Other Shiny input aliases: 
\code{\link{input_action_button}()},
\code{\link{input_action_link}()},
\code{\link{input_checkbox}()},
\code{\link{input_checkbox_group}()},
\code{\link{input_date}()},
\code{\link{input_date_range}()},
\code{\link{input_numeric}()},
\code{\link{input_password}()},
\code{\link{input_radio_buttons}()},
\code{\link{input_select}()},
\code{\link{input_slider}()},
\code{\link{input_text}()},
\code{\link{input_text_area}()}
}
\concept{Shiny input aliases}

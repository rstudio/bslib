% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toast.R
\name{toast_header}
\alias{toast_header}
\title{Create a structured toast header}
\usage{
toast_header(title, icon = NULL, status = NULL, ...)
}
\arguments{
\item{title}{Header text (required).}

\item{icon}{Optional icon element (e.g., from \code{bsicons::bs_icon()} or
\code{fontawesome::fa()}).}

\item{status}{Optional status indicator. One of \code{NULL}, \code{"primary"},
\code{"secondary"}, \code{"success"}, \code{"info"}, \code{"warning"}, \code{"danger"}, \code{"light"},
or \code{"dark"}. Adds a colored dot/badge before the title.}

\item{...}{Additional HTML attributes passed to the header container.}
}
\value{
A tag object representing the toast header content.
}
\description{
Creates a structured header for a toast with optional icon and status
indicator.
}
\examples{
\dontshow{if (rlang::is_interactive()) withAutoprint(\{ # examplesIf}
library(shiny)
library(bslib)

ui <- page_fluid(
  actionButton("show_header", "Show Toast with Header")
)

server <- function(input, output, session) {
  observeEvent(input$show_header, {
    show_toast(
      toast(
        body = "Your settings have been saved.",
        header = toast_header(
          title = "Settings Updated",
          status = "success"
        ),
        type = "success"
      )
    )
  })
}

shinyApp(ui, server)
\dontshow{\}) # examplesIf}
}
\seealso{
Other Toast components: 
\code{\link{hide_toast}()},
\code{\link{show_toast}()},
\code{\link{toast}()}
}
\concept{Toast components}

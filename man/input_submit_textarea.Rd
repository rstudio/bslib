% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-submit.R
\name{input_submit_textarea}
\alias{input_submit_textarea}
\alias{update_submit_textarea}
\title{Create a textarea input control with explicit submission}
\usage{
input_submit_textarea(
  id,
  placeholder,
  value = "",
  ...,
  button = NULL,
  label = NULL,
  width = "min(600px, 100\%)",
  submit_key = c("enter", "enter+modifier")
)

update_submit_textarea(
  id,
  ...,
  value = NULL,
  placeholder = NULL,
  label = NULL,
  submit = FALSE,
  focus = FALSE,
  session = get_current_session()
)
}
\arguments{
\item{id}{The input ID.}

\item{placeholder}{The placeholder text for the user input.}

\item{value}{The value to set the user input to.}

\item{button}{A \link[htmltools:builder]{htmltools::tags} element to use for the submit button. It's recommended
that this be a \code{\link[=input_task_button]{input_task_button()}} since it will automatically provide a
busy indicator (and disable) until the next flush occurs. Note also that if
the submit button launches a \link[shiny:ExtendedTask]{shiny::ExtendedTask}, this button can also be bound
to the task (\code{\link[=bind_task_button]{bind_task_button()}}) and/or manually updated for more
accurate progress reporting (\code{\link[=update_task_button]{update_task_button()}}).}

\item{submit_key}{A character string indicating what keyboard event should
trigger the submit button. The default is \code{enter}, which will submit the
input when the user presses the Enter/Return key. The \code{enter+modifier}
option will submit the input when the user presses the Enter key while
holding down Ctrl/Cmd.}

\item{submit}{Whether to automatically submit the text for the user. Requires \code{value}.}

\item{focus}{Whether to move focus to the input element. Requires \code{value}.}
}
\value{
A textarea input control that can be added to a UI definition.
}
\description{
Creates a textarea input where users can enter multi-line text and submit
their input using a dedicated button or keyboard shortcut. This control is
ideal when you want to capture finalized input, rather than reacting to every
keystroke, making it useful for chat boxes, comments, or other scenarios
where users may compose and review their text before submitting.
}
\section{Server value}{

A character string of the text input. The default value is \code{""} even if
\code{value} is provided. The value will only be set/updated when the user submits
the input by pressing the Enter key or clicking the submit button.
}

\examples{
\dontshow{if (rlang::is_interactive()) withAutoprint(\{ # examplesIf}

ui <- page_fluid(
  input_submit_textarea("text", "Enter some input..."),
  verbatimTextOutput("value")
)
server <- function(input, output) {
  output$value <- renderText({
    req(input$text)
    Sys.sleep(2)
    paste("You entered:", input$text)
  })
}
shinyApp(ui, server)
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=input_task_button]{input_task_button()}}
}

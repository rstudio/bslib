% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toast.R
\name{hide_toast}
\alias{hide_toast}
\title{Hide a toast notification}
\usage{
hide_toast(id, session = shiny::getDefaultReactiveDomain())
}
\arguments{
\item{id}{String with the toast ID returned by \code{\link[=show_toast]{show_toast()}} or a \code{toast}
object provided that the \code{id} was set when created/shown.}

\item{session}{Shiny session object.}
}
\value{
Called for side effects; returns \code{NULL} invisibly.
}
\description{
Manually dismisses a toast notification.
}
\examples{
\dontshow{if (rlang::is_interactive()) withAutoprint(\{ # examplesIf}
library(shiny)
library(bslib)

ui <- page_fluid(
  actionButton("show_persistent", "Show Persistent Toast"),
  actionButton("hide_persistent", "Hide Toast")
)

server <- function(input, output, session) {
  toast_id <- reactiveVal(NULL)

  observeEvent(input$show_persistent, {
    id <- show_toast(
      toast(
        body = "This toast won't disappear automatically.",
        autohide = FALSE
      )
    )
    toast_id(id)
  })

  observeEvent(input$hide_persistent, {
    req(toast_id())
    hide_toast(toast_id())
    toast_id(NULL)
  })
}

shinyApp(ui, server)
\dontshow{\}) # examplesIf}
}
\seealso{
Other Toast components: 
\code{\link{show_toast}()},
\code{\link{toast}()},
\code{\link{toast_header}()}
}
\concept{Toast components}

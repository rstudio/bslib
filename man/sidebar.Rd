% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sidebar.R
\name{sidebar}
\alias{sidebar}
\alias{layout_sidebar}
\alias{sidebar_open}
\alias{sidebar_close}
\title{Sidebar layouts}
\usage{
sidebar(
  ...,
  width = 250,
  position = c("left", "right"),
  open = c("desktop", "open", "closed", "always"),
  id = NULL,
  title = NULL,
  bg = NULL,
  class = NULL
)

layout_sidebar(
  sidebar,
  ...,
  fillable = FALSE,
  fill = TRUE,
  bg = NULL,
  border = TRUE,
  border_radius = TRUE,
  height = NULL
)

sidebar_open(id, session = get_current_session())

sidebar_close(id, session = get_current_session())
}
\arguments{
\item{...}{Unnamed arguments can be any valid child of an \link[htmltools:builder]{htmltools tag} and named arguments become HTML attributes on
returned UI element. In the case of \code{layout_sidebar()}, these arguments are
passed to the main content tag (not the sidebar+main content container).}

\item{width}{A valid \link[htmltools:validateCssUnit]{CSS unit} used for the
width of the sidebar.}

\item{position}{Where the sidebar should appear relative to the main content.}

\item{open}{The initial state of the sidebar, choosing from the following
options:
\itemize{
\item \code{"desktop"}: The sidebar starts open on desktop screen, closed on mobile.
This is default sidebar behavior.
\item \code{"open"} or \code{TRUE}: The sidebar starts open.
\item \code{"closed"} or \code{FALSE}: The sidebar starts closed.
\item \code{"always"} or \code{NA}: The sidebar is always open and cannot be closed.
}}

\item{id}{A character string. Required if wanting to re-actively read (or
update) the \code{collapsible} state in a Shiny app.}

\item{title}{A character title to be used as the sidebar title, which will be
wrapped in a \verb{<div>} element with class \code{sidebar-title}. You can also
provide a custom \code{\link[htmltools:builder]{htmltools::tag()}} for the title element, in which case
you'll likely want to give this element \code{class = "sidebar-title"}.}

\item{bg}{A background color. If provided, an accessible contrasting color is
provided for the foreground color (consider using a utility \code{class} to
customize the foreground color).}

\item{class}{Additional CSS classes for the top-level HTML element.}

\item{sidebar}{A \code{\link[=sidebar]{sidebar()}} object.}

\item{fillable}{Whether or not the \code{main} content area should be considered a
fillable (i.e., flexbox) container.}

\item{fill}{Whether or not to allow the layout container to grow/shrink to fit a
fillable container with an opinionated height (e.g., \code{page_fillable()}).}

\item{border}{Whether or not to add a border.}

\item{border_radius}{Whether or not to add a border radius.}

\item{height}{Any valid \link[htmltools:validateCssUnit]{CSS unit} (e.g.,
\code{height="200px"}). Doesn't apply when a card is made \code{full_screen}
(in this case, consider setting a \code{height} in \code{\link[=card_body]{card_body()}}).}

\item{session}{a shiny session object (the default should almost always be
used).}
}
\description{
Create a collapsing sidebar layout by providing a \code{sidebar()}
object to the \code{sidebar} argument of:
\itemize{
\item \code{layout_sidebar()}
\itemize{
\item Creates a sidebar layout component which can be dropped inside any
\code{\link[=page]{page()}} or \code{\link[=card]{card()}} context.
}
\item \code{\link[=page_navbar]{page_navbar()}}, \code{\link[=navs_tab_card]{navs_tab_card()}}, and \code{\link[=navs_pill_card]{navs_pill_card()}}
\itemize{
\item Creates a multi page/tab UI with a singular \code{sidebar()} (which is
shown on every page/tab).
}
}

See \href{https://rstudio.github.io/bslib/articles/sidebars.html}{this article}
to learn more.
}
\section{Functions}{
\itemize{
\item \code{sidebar_open()}: Open a \code{sidebar()} (during an active Shiny user session).

\item \code{sidebar_close()}: Close a \code{sidebar()} (during an active Shiny user session).

}}

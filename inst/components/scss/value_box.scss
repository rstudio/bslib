$bslib-value-box-enable-border: "auto" !default; // "auto" | "never" | "always"
$bslib-value-box-enable-shadow: $enable-shadows !default;

.bslib-value-box {
  @if ($bslib-value-box-enable-shadow) {
    box-shadow: $box-shadow;
  }

  container-name: bslib-value-box;
  container-type: inline-size;

  &.showcase-left-center {
    .value-box-grid {
      grid-template-columns: var(---bslib-value-box-showcase-width, 30%) auto;
    }
  }
  &.showcase-top-right {
    .value-box-grid {
      grid-template-columns: auto var(---bslib-value-box-showcase-width, 50%);
    }
  }

  // Should also be fillable/fill (i.e., d-flex; flex: 1)
  .value-box-area {
    justify-content: center;
    padding: 1.5rem 1rem;
    font-size: .9rem;
    font-weight: 500;
    * {
      color: inherit;
      margin-bottom: 0;
      margin-top: 0;
    }
  }

  .value-box-title {
    @include bootstrap-heading($h6-font-size);
    color: inherit;
    // add a non-breaking space to ensure it's not 0 height
    &:empty::after {
      content: '\00a0 '
    }
  }

  .value-box-value {
    @include bootstrap-heading($h2-font-size);
    color: inherit;
    // add a non-breaking space to ensure it's not 0 height
    &:empty::after {
      content: '\00a0 '
    }
  }

  // Should also be fillable/fill (i.e., d-flex; flex: 1)
  .value-box-showcase {
    align-items: center;
    justify-content: center;
    margin-top: auto;
    margin-bottom: auto;
    padding: 1rem;
    overflow: hidden;

    .bi, .fa {
      opacity: .85;
      min-width: 50px;
      max-width: 125%;
    }
    // We set font size because {bsicons}/{fontawesome} both
    // set height/width to 1em by default (as an inline style)
    .bi { font-size: 5rem; }
    .fa { font-size: 4rem; }

    max-height: var(---bslib-value-box-max-height);
  }

  &.showcase-top-right {
    .value-box-showcase {
      align-items: end;
      padding-left: 0;
      padding-bottom: 0;
    }

    &:not([data-full-screen="true"]) {
      .value-box-showcase {
        margin-top: 0;
        overflow: visible;
      }

      .value-box-grid {
        grid-template-columns: 1fr var(---bslib-value-box-showcase-width, 50%);

        > :first-child {
          grid-column: 1 / 2;
          align-self: end;
          position: absolute;
        }

        > :nth-child(2) {
          grid-column: 2 / 3;
          margin-left: auto;
        }
      }

      @container bslib-value-box (max-width: 300px) {
        .value-box-grid {
          grid-template-columns: 1fr;
          grid-template-rows: auto auto;
          > :first-child, > :nth-child(2) {
            grid-column: 1 / 2;
          }
          > :nth-child(2) {
            padding-left: 1rem;
          }
        }
      }
    }
  }

  &.showcase-left-center {
    @container bslib-value-box (max-width: 300px) {
      .value-box-grid {
        grid-template-columns: 1fr;
        grid-template-rows: auto auto;
      }
      > * {
        grid-column: 1 / 2;
      }
    }
  }

  &[data-full-screen="true"] {
    .value-box-grid {
      grid-template-columns: var(---bslib-value-box-widths-full-screen);
    }
    .value-box-showcase {
      max-height: var(---bslib-value-box-max-height-full-screen);
    }
  }
}

@if ($bslib-value-box-enable-border == "never") {
  .bslib-value-box {
    border: 0;
  }
}
@else if ($bslib-value-box-enable-border == "auto") {
  @if $bslib-value-box-enable-shadow {
    .bslib-value-box {
      border: 0;
    }
  } @else {
    .bslib-value-box:not(.border-auto) {
      border: 0;
    }
  }
}

// Override layout_inline_grid()'s preference to collapse to full-width on mobile (inside the value box)
@include media-breakpoint-down(sm) {
  .bslib-value-box.showcase-left-center .value-box-grid {
    grid-template-columns: var(---bslib-value-box-showcase-width) auto !important;
  }
  .bslib-value-box.showcase-top-right .value-box-grid {
    grid-template-columns: auto var(---bslib-value-box-showcase-width) !important;
  }
}
